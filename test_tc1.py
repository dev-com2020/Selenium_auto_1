# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestTc1:
    def get_element_text(self, driver, by, value):
        element = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((by, value))
        )
        return element.text

    def test_tc1(self, driver):
        driver.get("http://seleniumdemo.com/")
        driver.set_window_size(1800, 993)

        # Oczekiwanie na element
        WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, ".sek-btn-text"))
        ).click()

        # Kliknięcie na element
        WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "Add to cart"))
        ).click()

        # Oczekiwanie na element
        WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "View cart"))
        ).click()
        time.sleep(2)
        price = self.get_element_text(driver, By.CLASS_NAME, 'woocommerce-Price-currencySymbol')
        print(f'Tekst elementu "Add to cart": {price}')

        # Oczekiwanie na element
        WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.LINK_TEXT, "×"))
        ).click()

        # Oczekiwanie na element
        WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, ".row .branding-row span"))
        ).click()

    def save_screenshot(self, driver, name):
        driver.save_screenshot(name)
