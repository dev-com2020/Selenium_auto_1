# Generated by Selenium IDE
import os
from datetime import datetime

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.devtools.v85.network import CookieParam

from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestTc9:

    @pytest.fixture(scope='class')
    def driver(self):
        options = webdriver.ChromeOptions()
        options.add_argument('--ignore-certificate-errors')
        options.add_argument('--headless')
        driver = webdriver.Chrome(options=options)
        yield driver
        driver.quit()

    @pytest.fixture(autouse=True)
    def setup(self, driver):
        driver.set_window_size(1603, 947)
        driver.get("http://guidebook.seleniumacademy.com/Selectable.html")
        driver.implicitly_wait(5)

    def test_perform_composite_action(self, driver):
        one = driver.find_element(By.NAME, "one")
        three = driver.find_element(By.NAME, "three")
        six = driver.find_element(By.NAME, "six")

        ActionChains(driver) \
            .key_down(Keys.CONTROL) \
            .click(one) \
            .click(three) \
            .click(six) \
            .key_up(Keys.CONTROL) \
            .perform()
        time.sleep(2)
        driver.save_screenshot("test_actions.png")

    def test_move_by_offset(self,driver):
        three = driver.find_element(By.NAME, "three")
        print("X coord: " + str(three.location['x']) + " Y coord: " + str(three.location['y']))

        actions = ActionChains(driver)
        actions.move_by_offset(three.location['x'] + 10, three.location['y'] + 1).click()
        actions.perform()
        driver.save_screenshot("test_actions2.png")
